quartz()
p <- ggplot(energetics.all,aes(Region,trophic.mean,fill=Region))
p + geom_boxplot(outlier.size=0)  + theme_bw()+ scale_fill_manual(values=c("deepskyblue","green","yellow")) + theme(strip.background = element_rect(fill = 'white')) + theme(panel.grid.minor = element_blank(), panel.grid.major = element_blank(),panel.background = element_blank()) + scale_y_continuous(breaks=c(1:9))
# by class
quartz()
p <- ggplot(energetics.class,aes(Region,trophic.mean,fill=Region))
p + geom_boxplot(outlier.size=0) + facet_wrap(~Class,scale="free") + theme_bw() + scale_fill_manual(values=c("deepskyblue","green","yellow")) + theme(strip.background = element_rect(fill = 'white')) + theme(panel.grid.minor = element_blank(), panel.grid.major = element_blank(),panel.background = element_blank(),strip.text.x = element_text(size = 14, colour = "black")) + scale_y_continuous(breaks=c(1:7))
library(gdata)
library(plyr)
library(ggplot2)
library(ggmap)
library(Imap)
### read in and clean the data file
shells <- read.csv("~/Dropbox/Panama energetics/GSA 2015 talk/Panama.Size.Freq.csv", header=TRUE, stringsAsFactors=FALSE, fileEncoding="latin1")
life.modes <- read.csv("~/Dropbox/Panama energetics/GSA 2015 talk/Life_Modes_2.0.csv", header=TRUE, stringsAsFactors=FALSE)
shells <- merge(shells,life.modes,by=c("Class","Genus"))
shells$Sample2 <- paste(shells$Region,shells$Latitude,shells$Longitude)
### plot samples on map
mapImageData1 <- get_map("Panama",color = "color",source = "google",maptype = "satellite",zoom = 7)
quartz()
p <- ggmap(mapImageData1,extent = "device",ylab = "Latitude",xlab = "Longitude")
p + geom_point(data=shells,aes(Longitude,Latitude,colour=Sample2))
shells <- shells[(shells$Class == "B" | shells$Class == "G" & shells$Planktic != "yes"),]
shells <- shells[(shells$Depth_m < 250),]
#write.csv(shells,"~/Dropbox/Panama energetics/Data/Genera2.csv")
## calculate biovolume (Kosnik et al.) and then biomass (Powell and Stanton), then AFDM (Brey), then BMR (Brey)
shells$Volume <- ifelse(shells$Class == "B", (4/3 * pi * shells$Height/2 * shells$Length/2 * shells$Width), (pi * (shells$Length/2)^2 * shells$Height/3))
shells$LogBiomass <- ifelse(shells$Class == "B", (.9576 * log10(shells$Volume) - 4.8939), (.7708 * log10(shells$Volume) - 3.2421))
shells$Biomass <- 10^shells$LogBiomass
shells$AFDM <- ifelse(shells$Class == "B",shells$Biomass*.14,shells$Biomass*.16)
shells$BMR <- ifelse(shells$Class == "B",.41,.19)
shells<- shells[-which(is.na(shells$Volume)), ]
shells<- shells[(shells$Volume > 0), ]
##extract min size
#min.vol <- function(df) min(na.omit(log10(df$Volume)))
#max.vol <- function(df) max(na.omit(log10(df$Volume)))
#minsizes <- ddply(shells,.(Ocean,Class,Sample),each(min.vol,max.vol))
#quartz()
#p <- ggplot(minsizes,aes(min.vol,Sample))
#p + geom_segment(aes(xend = max.vol, yend = Sample),size=3) + facet_wrap(~Class)
shells <- shells[(shells$Region != "C-SB"),]
### sample from distributions if only a fraction of the sample was measured
replicate <- function(df){
# df <- head(shells,20)
num <- nrow(df)
#df <- df[(df$Volume > 0),]
fraction <- 1/(mean(df$Fraction))
replicates <- num*fraction
outs <-  df[sample(nrow(df), replicates,replace=TRUE), ]
return(outs)
}
shells2 <- ddply(shells,.(Ocean,Sample2,Depth_m,Class,Feeding.Cat,Genus,species),each(replicate))
shells2$LogVol <- log10(shells2$Volume)
shells2$trophic.factor <- ifelse(shells2$Feeding.Cat=="Carnivore",10,1)
##extract min size
#min.vol <- function(df) min(na.omit(log10(df$Volume)))
#max.vol <- function(df) max(na.omit(log10(df$Volume)))
#minsizes <- ddply(shells,.(Ocean,Class,Sample),each(min.vol,max.vol))
#quartz()
#p <- ggplot(minsizes,aes(min.vol,Sample))
#p + geom_segment(aes(xend = max.vol, yend = Sample),size=3) + facet_wrap(~Class)
shells <- shells[(shells$Region != "C-SB"),]
### sample from distributions if only a fraction of the sample was measured
replicate <- function(df){
# df <- head(shells,20)
num <- nrow(df)
#df <- df[(df$Volume > 0),]
fraction <- 1/(mean(df$Fraction))
replicates <- num*fraction
outs <-  df[sample(nrow(df), replicates,replace=TRUE), ]
return(outs)
}
shells2 <- ddply(shells,.(Ocean,Sample2,Depth_m,Class,Feeding.Cat,Genus,species),each(replicate))
shells2$LogVol <- log10(shells2$Volume)
shells2$trophic.factor <- ifelse(shells2$Feeding.Cat=="Carnivore",10,1)
shells2$energetic <- shells2$AFDM^.75 * shells2$trophic.factor* shell2$BMR
shells2$energetic <- shells2$AFDM^.75 * shells2$trophic.factor* shells2$BMR
p <- ggplot(shells2,aes(log10(shells2$energetic),group=Region,fill=Region))
p + geom_density(alpha=.25)+ scale_fill_manual(values=c("deepskyblue","green","yellow")) + facet_wrap(~Sample2)
### summarize samples
trophic.median <- function(df) log(median(df$energetic))
trophic.mean <- function(df) log(mean(df$energetic))
n.ind <- function(df) nrow(df)
#By Feeding Cat:
energetics <- ddply(shells2,.(Region,Sample2,Depth_m,Latitude,Longitude,Feeding.Cat),each(trophic.median,trophic.mean,n.ind))
#By Feeding Cat:
energetics.class <- ddply(shells2,.(Region,Sample2,Depth_m,Latitude,Longitude,Class),each(trophic.median,trophic.mean,n.ind))
#All combined
energetics.all <- ddply(shells2,.(Region,Sample2,Latitude,Longitude,Depth_m),each(trophic.median,trophic.mean,n.ind))
energetics.all <- energetics.all[(energetics.all$n.ind > 50),]
#all by depth
#quartz()
#p <- ggplot(energetics.all,aes(Depth_m,trophic.median,colour=Region))
#p + geom_point()  + theme_bw()
# by feeding group
quartz()
p <- ggplot(energetics,aes(Region,trophic.mean,fill=Region))
p + geom_boxplot(outlier.size=0) + facet_wrap(~Feeding.Cat,scale="free") + theme_bw() + scale_fill_manual(values=c("deepskyblue","green","yellow")) + theme(strip.background = element_rect(fill = 'white')) + theme(panel.grid.minor = element_blank(), panel.grid.major = element_blank(),panel.background = element_blank(),strip.text.x = element_text(size = 14, colour = "black")) + scale_y_continuous(breaks=c(1:7))
# all
quartz()
p <- ggplot(energetics.all,aes(Region,trophic.mean,fill=Region))
p + geom_boxplot(outlier.size=0)  + theme_bw()+ scale_fill_manual(values=c("deepskyblue","green","yellow")) + theme(strip.background = element_rect(fill = 'white')) + theme(panel.grid.minor = element_blank(), panel.grid.major = element_blank(),panel.background = element_blank()) + scale_y_continuous(breaks=c(1:9))
# by class
quartz()
p <- ggplot(energetics.class,aes(Region,trophic.mean,fill=Region))
p + geom_boxplot(outlier.size=0) + facet_wrap(~Class,scale="free") + theme_bw() + scale_fill_manual(values=c("deepskyblue","green","yellow")) + theme(strip.background = element_rect(fill = 'white')) + theme(panel.grid.minor = element_blank(), panel.grid.major = element_blank(),panel.background = element_blank(),strip.text.x = element_text(size = 14, colour = "black")) + scale_y_continuous(breaks=c(1:7))
quartz()
p <- ggplot(energetics.class,aes(Region,trophic.mean,fill=Region))
p + geom_boxplot(outlier.size=0) + facet_wrap(~Class,scale="free") + theme_bw() + scale_fill_manual(values=c("deepskyblue","green","yellow")) + theme(strip.background = element_rect(fill = 'white')) + theme(panel.grid.minor = element_blank(), panel.grid.major = element_blank(),strip.text.x = element_text(size = 14, colour = "black")) + scale_y_continuous(breaks=c(1:7))
quartz()
p <- ggplot(energetics.class,aes(Region,trophic.mean,fill=Region))
p + geom_boxplot(outlier.size=0) + facet_wrap(~Class,scale="free") + theme_bw() + scale_fill_manual(values=c("deepskyblue","green","yellow"))
p <- ggplot(energetics.class,aes(Region,trophic.mean,fill=Region))
p + geom_boxplot(outlier.size=0) + facet_wrap(~Class,scale="free") + theme_bw() + scale_fill_manual(values=c("deepskyblue","green","yellow")) + theme(strip.background = element_rect(fill = 'white')) + theme(panel.grid.minor = element_blank(), panel.grid.major = element_blank(),panel.background = element_blank(),strip.text.x = element_text(size = 14, colour = "black"))
quartz()
p <- ggplot(energetics,aes(Region,trophic.mean,fill=Region))
p + geom_boxplot(outlier.size=0) + facet_wrap(~Feeding.Cat,scale="free") + theme_bw() + scale_fill_manual(values=c("deepskyblue","green","yellow")) + theme(strip.background = element_rect(fill = 'white')) + theme(panel.grid.minor = element_blank(), panel.grid.major = element_blank(),panel.background = element_blank(),strip.text.x = element_text(size = 14, colour = "black")) + scale_y_continuous(breaks=c(=10:10))
# by feeding group
quartz()
p <- ggplot(energetics,aes(Region,trophic.mean,fill=Region))
p + geom_boxplot(outlier.size=0) + facet_wrap(~Feeding.Cat,scale="free") + theme_bw() + scale_fill_manual(values=c("deepskyblue","green","yellow")) + theme(strip.background = element_rect(fill = 'white')) + theme(panel.grid.minor = element_blank(), panel.grid.major = element_blank(),panel.background = element_blank(),strip.text.x = element_text(size = 14, colour = "black")) + scale_y_continuous(breaks=c(-10:10))
quartz()
p <- ggplot(energetics,aes(Region,trophic.mean,fill=Region))
p + geom_boxplot(outlier.size=0) + facet_wrap(~Feeding.Cat) + theme_bw() + scale_fill_manual(values=c("deepskyblue","green","yellow")) + theme(strip.background = element_rect(fill = 'white')) + theme(panel.grid.minor = element_blank(), panel.grid.major = element_blank(),panel.background = element_blank(),strip.text.x = element_text(size = 14, colour = "black")) + scale_y_continuous(breaks=c(-10:10))
# by feeding group
quartz()
p <- ggplot(energetics,aes(Region,trophic.mean,fill=Region))
p + geom_boxplot(outlier.size=0) + facet_wrap(~Feeding.Cat,ncol=5) + theme_bw() + scale_fill_manual(values=c("deepskyblue","green","yellow")) + theme(strip.background = element_rect(fill = 'white')) + theme(panel.grid.minor = element_blank(), panel.grid.major = element_blank(),panel.background = element_blank(),strip.text.x = element_text(size = 14, colour = "black")) + scale_y_continuous(breaks=c(-10:10))
# all
quartz()
p <- ggplot(energetics.all,aes(Region,trophic.mean,fill=Region))
p + geom_boxplot(outlier.size=0)  + theme_bw()+ scale_fill_manual(values=c("deepskyblue","green","yellow")) + theme(strip.background = element_rect(fill = 'white')) + theme(panel.grid.minor = element_blank(), panel.grid.major = element_blank(),panel.background = element_blank()) + scale_y_continuous(breaks=c(-10:10))
quartz()
p <- ggplot(energetics,aes(Region,trophic.mean,fill=Region))
p + geom_boxplot(outlier.size=0) + facet_wrap(~Feeding.Cat,ncol=5) + theme_bw() + scale_fill_manual(values=c("deepskyblue","green","yellow")) + theme(strip.background = element_rect(fill = 'white')) + theme(panel.grid.minor = element_blank(), panel.grid.major = element_blank(),panel.background = element_blank(),strip.text.x = element_text(size = 14, colour = "black")) + scale_y_continuous(breaks=c(-10:10))
energetics.all
#All combined
energetics.all <- ddply(shells2,.(Region,Sample2,Latitude,Longitude,Depth_m),each(trophic.median,trophic.mean,n.ind))
energetics.all
energetics.all <- energetics.all[(energetics.all$n.ind > 5),]
# by feeding group
quartz()
p <- ggplot(energetics,aes(Region,trophic.mean,fill=Region))
p + geom_boxplot(outlier.size=0) + facet_wrap(~Feeding.Cat,ncol=5) + theme_bw() + scale_fill_manual(values=c("deepskyblue","green","yellow")) + theme(strip.background = element_rect(fill = 'white')) + theme(panel.grid.minor = element_blank(), panel.grid.major = element_blank(),panel.background = element_blank(),strip.text.x = element_text(size = 14, colour = "black")) + scale_y_continuous(breaks=c(-10:10))
# all
quartz()
p <- ggplot(energetics.all,aes(Region,trophic.mean,fill=Region))
p + geom_boxplot(outlier.size=0)  + theme_bw()+ scale_fill_manual(values=c("deepskyblue","green","yellow")) + theme(strip.background = element_rect(fill = 'white')) + theme(panel.grid.minor = element_blank(), panel.grid.major = element_blank(),panel.background = element_blank()) + scale_y_continuous(breaks=c(-10:10))
# by class
quartz()
p <- ggplot(energetics.class,aes(Region,trophic.mean,fill=Region))
p + geom_boxplot(outlier.size=0) + facet_wrap(~Class,scale="free") + theme_bw() + scale_fill_manual(values=c("deepskyblue","green","yellow")) + theme(strip.background = element_rect(fill = 'white')) + theme(panel.grid.minor = element_blank(), panel.grid.major = element_blank(),panel.background = element_blank(),strip.text.x = element_text(size = 14, colour = "black")) + scale_y_continuous(breaks=c(-10:10))
quartz()
p <- ggplot(energetics.class,aes(Region,trophic.mean,fill=Region))
p + geom_boxplot(outlier.size=0) + facet_wrap(~Class) + theme_bw() + scale_fill_manual(values=c("deepskyblue","green","yellow")) + theme(strip.background = element_rect(fill = 'white')) + theme(panel.grid.minor = element_blank(), panel.grid.major = element_blank(),panel.background = element_blank(),strip.text.x = element_text(size = 14, colour = "black")) + scale_y_continuous(breaks=c(-10:10))
# by feeding group
quartz()
p <- ggplot(energetics,aes(Region,trophic.mean,fill=Region))
p + geom_boxplot(outlier.size=0) + facet_wrap(~Feeding.Cat,ncol=5) + theme_bw() + scale_fill_manual(values=c("deepskyblue","green","yellow")) + theme(strip.background = element_rect(fill = 'white')) + theme(panel.grid.minor = element_blank(), panel.grid.major = element_blank(),panel.background = element_blank(),strip.text.x = element_text(size = 14, colour = "black")) + scale_y_continuous(breaks=c(-10:10))
library(gdata)
library(plyr)
library(ggplot2)
library(ggmap)
library(Imap)
### read in and clean the data file
shells <- read.csv("~/Dropbox/Panama energetics/GSA 2015 talk/Panama.Size.Freq.csv", header=TRUE, stringsAsFactors=FALSE, fileEncoding="latin1")
life.modes <- read.csv("~/Dropbox/Panama energetics/GSA 2015 talk/Life_Modes_2.0.csv", header=TRUE, stringsAsFactors=FALSE)
shells <- merge(shells,life.modes,by=c("Class","Genus"))
shells$Sample2 <- paste(shells$Region,shells$Latitude,shells$Longitude)
### plot samples on map
mapImageData1 <- get_map("Panama",color = "color",source = "google",maptype = "satellite",zoom = 7)
quartz()
p <- ggmap(mapImageData1,extent = "device",ylab = "Latitude",xlab = "Longitude")
p + geom_point(data=shells,aes(Longitude,Latitude,colour=Sample2))
shells <- shells[(shells$Class == "Bivalvia" | shells$Class == "Gastropoda" & shells$Planktic != "yes"),]
shells <- shells[(shells$Depth_m < 250),]
#write.csv(shells,"~/Dropbox/Panama energetics/Data/Genera2.csv")
## calculate biovolume (Kosnik et al.) and then biomass (Powell and Stanton), then AFDM (Brey), then BMR (Brey)
shells$Volume <- ifelse(shells$Class == "Bivalvia", (4/3 * pi * shells$Height/2 * shells$Length/2 * shells$Width), (pi * (shells$Length/2)^2 * shells$Height/3))
shells$LogBiomass <- ifelse(shells$Class == "Bivalvia", (.9576 * log10(shells$Volume) - 4.8939), (.7708 * log10(shells$Volume) - 3.2421))
shells$Biomass <- 10^shells$LogBiomass
shells$AFDM <- ifelse(shells$Class == "Bivalvia",shells$Biomass*.14,shells$Biomass*.16)
shells$BMR <- ifelse(shells$Class == "Bivalvia",.41,.19)
shells<- shells[-which(is.na(shells$Volume)), ]
shells<- shells[(shells$Volume > 0), ]
library(gdata)
library(plyr)
library(ggplot2)
library(ggmap)
library(Imap)
### read in and clean the data file
shells <- read.csv("~/Dropbox/Panama energetics/GSA 2015 talk/Panama.Size.Freq.csv", header=TRUE, stringsAsFactors=FALSE, fileEncoding="latin1")
life.modes <- read.csv("~/Dropbox/Panama energetics/GSA 2015 talk/Life_Modes_2.0.csv", header=TRUE, stringsAsFactors=FALSE)
shells <- merge(shells,life.modes,by=c("Class","Genus"))
shells$Sample2 <- paste(shells$Region,shells$Latitude,shells$Longitude)
### plot samples on map
mapImageData1 <- get_map("Panama",color = "color",source = "google",maptype = "satellite",zoom = 7)
quartz()
p <- ggmap(mapImageData1,extent = "device",ylab = "Latitude",xlab = "Longitude")
p + geom_point(data=shells,aes(Longitude,Latitude,colour=Sample2))
head(shells)
library(gdata)
library(plyr)
library(ggplot2)
library(ggmap)
library(Imap)
### read in and clean the data file
shells <- read.csv("~/Dropbox/Panama energetics/GSA 2015 talk/Panama.Size.Freq.csv", header=TRUE, stringsAsFactors=FALSE, fileEncoding="latin1")
life.modes <- read.csv("~/Dropbox/Panama energetics/GSA 2015 talk/Life_Modes_2.0.csv", header=TRUE, stringsAsFactors=FALSE)
shells <- merge(shells,life.modes,by=c("Class","Genus"))
library(gdata)
library(plyr)
library(ggplot2)
library(ggmap)
library(Imap)
### read in and clean the data file
shells <- read.csv("~/Dropbox/Panama energetics/GSA 2015 talk/Panama.Size.Freq.csv", header=TRUE, stringsAsFactors=FALSE, fileEncoding="latin1")
life.modes <- read.csv("~/Dropbox/Panama energetics/GSA 2015 talk/Life_Modes_2.0.csv", header=TRUE, stringsAsFactors=FALSE)
shells <- merge(shells,life.modes,by=c("Class","Genus"))
shells$Sample2 <- paste(shells$Region,shells$Latitude,shells$Longitude)
### plot samples on map
mapImageData1 <- get_map("Panama",color = "color",source = "google",maptype = "satellite",zoom = 7)
quartz()
p <- ggmap(mapImageData1,extent = "device",ylab = "Latitude",xlab = "Longitude")
p + geom_point(data=shells,aes(Longitude,Latitude,colour=Sample2))
shells <- shells[(shells$Class == "Bivalvia" | shells$Class == "Gastropoda" & shells$Planktic != "yes"),]
shells <- shells[(shells$Depth_m < 250),]
#write.csv(shells,"~/Dropbox/Panama energetics/Data/Genera2.csv")
## calculate biovolume (Kosnik et al.) and then biomass (Powell and Stanton), then AFDM (Brey), then BMR (Brey)
shells$Volume <- ifelse(shells$Class == "Bivalvia", (4/3 * pi * shells$Height/2 * shells$Length/2 * shells$Width), (pi * (shells$Length/2)^2 * shells$Height/3))
shells$LogBiomass <- ifelse(shells$Class == "Bivalvia", (.9576 * log10(shells$Volume) - 4.8939), (.7708 * log10(shells$Volume) - 3.2421))
shells$Biomass <- 10^shells$LogBiomass
shells$AFDM <- ifelse(shells$Class == "Bivalvia",shells$Biomass*.14,shells$Biomass*.16)
shells$BMR <- ifelse(shells$Class == "Bivalvia",.41,.19)
shells<- shells[-which(is.na(shells$Volume)), ]
shells<- shells[(shells$Volume > 0), ]
#quartz()
#p <- ggplot(minsizes,aes(min.vol,Sample))
#p + geom_segment(aes(xend = max.vol, yend = Sample),size=3) + facet_wrap(~Class)
shells <- shells[(shells$Region != "C-SB"),]
### sample from distributions if only a fraction of the sample was measured
replicate <- function(df){
# df <- head(shells,20)
num <- nrow(df)
#df <- df[(df$Volume > 0),]
fraction <- 1/(mean(df$Fraction))
replicates <- num*fraction
outs <-  df[sample(nrow(df), replicates,replace=TRUE), ]
return(outs)
}
shells2 <- ddply(shells,.(Ocean,Sample2,Depth_m,Class,Feeding.Cat,Genus,species),each(replicate))
shells2$LogVol <- log10(shells2$Volume)
shells2$trophic.factor <- ifelse(shells2$Feeding.Cat=="Carnivore",10,1)
shells2$energetic <- shells2$AFDM^.75 * shells2$trophic.factor* shells2$BMR
p <- ggplot(shells2,aes(log10(shells2$energetic),group=Region,fill=Region))
p + geom_density(alpha=.25)+ scale_fill_manual(values=c("deepskyblue","green","yellow")) + facet_wrap(~Sample2)
### summarize samples
#quartz()
#p <- ggplot(shells2,aes(Sample,log10(energetic)))
#p + geom_boxplot() + facet_grid(Feeding.Cat ~ Ocean,scale="free")
trophic.median <- function(df) log(median(df$energetic))
trophic.mean <- function(df) log(mean(df$energetic))
n.ind <- function(df) nrow(df)
#By Feeding Cat:
energetics <- ddply(shells2,.(Region,Sample2,Depth_m,Latitude,Longitude,Feeding.Cat),each(trophic.median,trophic.mean,n.ind))
#By Feeding Cat:
energetics.class <- ddply(shells2,.(Region,Sample2,Depth_m,Latitude,Longitude,Class),each(trophic.median,trophic.mean,n.ind))
#All combined
energetics.all <- ddply(shells2,.(Region,Sample2,Latitude,Longitude,Depth_m),each(trophic.median,trophic.mean,n.ind))
energetics.all <- energetics.all[(energetics.all$n.ind > 5),]
#all by depth
#quartz()
#p <- ggplot(energetics.all,aes(Depth_m,trophic.median,colour=Region))
#p + geom_point()  + theme_bw()
# by feeding group
quartz()
p <- ggplot(energetics,aes(Region,trophic.mean,fill=Region))
p + geom_boxplot(outlier.size=0) + facet_wrap(~Feeding.Cat,ncol=5) + theme_bw() + scale_fill_manual(values=c("deepskyblue","green","yellow")) + theme(strip.background = element_rect(fill = 'white')) + theme(panel.grid.minor = element_blank(), panel.grid.major = element_blank(),panel.background = element_blank(),strip.text.x = element_text(size = 14, colour = "black")) + scale_y_continuous(breaks=c(-10:10))
# all
quartz()
p <- ggplot(energetics.all,aes(Region,trophic.mean,fill=Region))
p + geom_boxplot(outlier.size=0)  + theme_bw()+ scale_fill_manual(values=c("deepskyblue","green","yellow")) + theme(strip.background = element_rect(fill = 'white')) + theme(panel.grid.minor = element_blank(), panel.grid.major = element_blank(),panel.background = element_blank()) + scale_y_continuous(breaks=c(-10:10))
# by class
quartz()
p <- ggplot(energetics.class,aes(Region,trophic.mean,fill=Region))
p + geom_boxplot(outlier.size=0) + facet_wrap(~Class) + theme_bw() + scale_fill_manual(values=c("deepskyblue","green","yellow")) + theme(strip.background = element_rect(fill = 'white')) + theme(panel.grid.minor = element_blank(), panel.grid.major = element_blank(),panel.background = element_blank(),strip.text.x = element_text(size = 14, colour = "black")) + scale_y_continuous(breaks=c(-10:10))
## limit to genera occuring in multiple regions
# all
quartz()
p <- ggplot(energetics.all,aes(Region,trophic.mean,fill=Region))
p + geom_boxplot(outlier.size=0)  + theme_bw()+ scale_fill_manual(values=c("deepskyblue","green","yellow")) + theme(strip.background = element_rect(fill = 'white')) + theme(panel.grid.minor = element_blank(), panel.grid.major = element_blank(),panel.background = element_blank()) + scale_y_continuous(breaks=c(-10:10))
library(gdata)
library(plyr)
library(ggplot2)
library(ggmap)
library(Imap)
### read in and clean the data file
shells <- read.csv("~/Dropbox/Panama energetics/GSA 2015 talk/Panama.Size.Freq.csv", header=TRUE, stringsAsFactors=FALSE, fileEncoding="latin1")
life.modes <- read.csv("~/Dropbox/Panama energetics/GSA 2015 talk/Life_Modes_2.0.csv", header=TRUE, stringsAsFactors=FALSE)
shells <- merge(shells,life.modes,by=c("Class","Genus"))
shells$Sample2 <- paste(shells$Region,shells$Latitude,shells$Longitude)
### plot samples on map
mapImageData1 <- get_map("Panama",color = "color",source = "google",maptype = "satellite",zoom = 7)
quartz()
p <- ggmap(mapImageData1,extent = "device",ylab = "Latitude",xlab = "Longitude")
p + geom_point(data=shells,aes(Longitude,Latitude,colour=Sample2))
shells <- shells[(shells$Class == "Bivalvia" | shells$Class == "Gastropoda" & shells$Planktic != "yes"),]
shells <- shells[(shells$Depth_m < 250),]
#write.csv(shells,"~/Dropbox/Panama energetics/Data/Genera2.csv")
## calculate biovolume (Kosnik et al.) and then biomass (Powell and Stanton), then AFDM (Brey), then BMR (Brey)
shells$Volume <- ifelse(shells$Class == "Bivalvia", (4/3 * pi * shells$Height/2 * shells$Length/2 * shells$Width), (pi * (shells$Length/2)^2 * shells$Height/3))
shells$LogBiomass <- ifelse(shells$Class == "Bivalvia", (.9576 * log10(shells$Volume) - 4.8939), (.7708 * log10(shells$Volume) - 3.2421))
shells$Biomass <- 10^shells$LogBiomass
shells$AFDM <- ifelse(shells$Class == "Bivalvia",shells$Biomass*.14,shells$Biomass*.16)
shells$BMR <- ifelse(shells$Class == "Bivalvia",.41,.19)
shells<- shells[-which(is.na(shells$Volume)), ]
shells<- shells[(shells$Volume > 0), ]
##extract min size
#min.vol <- function(df) min(na.omit(log10(df$Volume)))
#max.vol <- function(df) max(na.omit(log10(df$Volume)))
#minsizes <- ddply(shells,.(Ocean,Class,Sample),each(min.vol,max.vol))
#quartz()
#p <- ggplot(minsizes,aes(min.vol,Sample))
#p + geom_segment(aes(xend = max.vol, yend = Sample),size=3) + facet_wrap(~Class)
shells <- shells[(shells$Region != "C-SB"),]
### sample from distributions if only a fraction of the sample was measured
replicate <- function(df){
# df <- head(shells,20)
num <- nrow(df)
#df <- df[(df$Volume > 0),]
fraction <- 1/(mean(df$Fraction))
replicates <- num*fraction
outs <-  df[sample(nrow(df), replicates,replace=TRUE), ]
return(outs)
}
shells2 <- ddply(shells,.(Ocean,Sample2,Depth_m,Class,Feeding.Cat,Genus,species),each(replicate))
shells2$LogVol <- log10(shells2$Volume)
shells2$trophic.factor <- ifelse(shells2$Feeding.Cat=="Carnivore",10,1)
shells2$energetic <- shells2$AFDM^.75 * shells2$trophic.factor* shells2$BMR
p <- ggplot(shells2,aes(log10(shells2$energetic),group=Region,fill=Region))
p + geom_density(alpha=.25)+ scale_fill_manual(values=c("deepskyblue","green","yellow")) + facet_wrap(~Sample2)
### summarize samples
#quartz()
#p <- ggplot(shells2,aes(Sample,log10(energetic)))
#p + geom_boxplot() + facet_grid(Feeding.Cat ~ Ocean,scale="free")
trophic.median <- function(df) log(median(df$energetic))
trophic.mean <- function(df) log(mean(df$energetic))
n.ind <- function(df) nrow(df)
#By Feeding Cat:
energetics <- ddply(shells2,.(Region,Sample2,Depth_m,Latitude,Longitude,Feeding.Cat),each(trophic.median,trophic.mean,n.ind))
#By Feeding Cat:
energetics.class <- ddply(shells2,.(Region,Sample2,Depth_m,Latitude,Longitude,Class),each(trophic.median,trophic.mean,n.ind))
#All combined
energetics.all <- ddply(shells2,.(Region,Sample2,Latitude,Longitude,Depth_m),each(trophic.median,trophic.mean,n.ind))
energetics.all <- energetics.all[(energetics.all$n.ind > 5),]
#all by depth
#quartz()
#p <- ggplot(energetics.all,aes(Depth_m,trophic.median,colour=Region))
#p + geom_point()  + theme_bw()
# by feeding group
quartz()
p <- ggplot(energetics,aes(Region,trophic.mean,fill=Region))
p + geom_boxplot(outlier.size=0) + facet_wrap(~Feeding.Cat,ncol=5) + theme_bw() + scale_fill_manual(values=c("deepskyblue","green","yellow")) + theme(strip.background = element_rect(fill = 'white')) + theme(panel.grid.minor = element_blank(), panel.grid.major = element_blank(),panel.background = element_blank(),strip.text.x = element_text(size = 14, colour = "black")) + scale_y_continuous(breaks=c(-10:10))
sst <- read.csv("~/Dropbox/NE Pacific Limpets/WOA.NE.Pacific.Mean.Annual.SST.csv", header=TRUE, stringsAsFactors=FALSE)
limpet <- read.csv("~/Dropbox/NE Pacific Limpets/ucmp2_fields_Sara_Limpets.csv", header=TRUE, stringsAsFactors=FALSE)
sst <- read.csv("~/Dropbox/NE Pacific Limpets/WOA.NE.Pacific.Mean.Annual.SST.csv", header=TRUE, stringsAsFactors=FALSE)
limpet <- read.csv("~/Dropbox/NE Pacific Limpets/ucmp2_fields_Sara_Limpets.csv", header=TRUE, stringsAsFactors=FALSE)
names(sst) <- c("Latitude", "Longitude", "SST")
limpet$latitude <- as.numeric(limpet$latitude)
limpet$longitude <- as.numeric(limpet$longitude)
p <- ggplot(data=sst, aes(x=Longitude, y=Latitude, fill=SST))
q <- p + geom_tile() + scale_fill_gradientn(colours=rainbow(7)) + coord_equal()
q + geom_point(data=limpet, aes(x=longitude, y=latitude, fill=NULL),color="black",size=1)
sst <- read.csv("~/Dropbox/NE Pacific Limpets/WOA.NE.Pacific.Mean.Annual.SST.csv", header=TRUE, stringsAsFactors=FALSE)
limpet <- read.csv("~/Dropbox/NE Pacific Limpets/ucmp2_fields_Sara_Limpets.csv", header=TRUE, stringsAsFactors=FALSE)
names(sst) <- c("Latitude", "Longitude", "SST")
limpet$latitude <- as.numeric(limpet$latitude)
limpet$longitude <- as.numeric(limpet$longitude)
quartz()
p <- ggplot(data=sst, aes(x=Longitude, y=Latitude, fill=SST))
p + geom_tile() + scale_fill_gradientn(colours=rainbow(7)) + coord_equal()
p + geom_point(data=limpet, aes(x=longitude, y=latitude, fill=NULL),color="black",size=1)
sst <- read.csv("~/Dropbox/NE Pacific Limpets/WOA.NE.Pacific.Mean.Annual.SST.csv", header=TRUE, stringsAsFactors=FALSE)
limpet <- read.csv("~/Dropbox/NE Pacific Limpets/ucmp2_fields_Sara_Limpets.csv", header=TRUE, stringsAsFactors=FALSE)
names(sst) <- c("Latitude", "Longitude", "SST")
limpet$latitude <- as.numeric(limpet$latitude)
limpet$longitude <- as.numeric(limpet$longitude)
quartz()
p <- ggplot(data=sst, aes(x=Longitude, y=Latitude, fill=SST))
q <- p + geom_tile() + scale_fill_gradientn(colours=rainbow(7)) + coord_equal()
q + geom_point(data=limpet, aes(x=longitude, y=latitude, fill=NULL),color="black",size=1)
sst <- read.csv("~/Dropbox/NE Pacific Limpets/WOA.NE.Pacific.Mean.Annual.SST.csv", header=TRUE, stringsAsFactors=FALSE)
limpet <- read.csv("~/Dropbox/NE Pacific Limpets/ucmp2_fields_Sara_Limpets.csv", header=TRUE, stringsAsFactors=FALSE)
names(sst) <- c("Latitude", "Longitude", "SST")
limpet$latitude <- as.numeric(limpet$latitude)
limpet$longitude <- as.numeric(limpet$longitude)
quartz()
p <- ggplot(data=sst, aes(x=Longitude, y=Latitude, fill=-SST))
q <- p + geom_tile() + scale_fill_gradientn(colours=rainbow(7)) + coord_equal()
q + geom_point(data=limpet, aes(x=longitude, y=latitude, fill=NULL),color="black",size=1)
sst <- read.csv("~/Dropbox/NE Pacific Limpets/WOA.NE.Pacific.Mean.Annual.SST.csv", header=TRUE, stringsAsFactors=FALSE)
limpet <- read.csv("~/Dropbox/NE Pacific Limpets/ucmp2_fields_Sara_Limpets.csv", header=TRUE, stringsAsFactors=FALSE)
names(sst) <- c("Latitude", "Longitude", "SST")
limpet$latitude <- as.numeric(limpet$latitude)
limpet$longitude <- as.numeric(limpet$longitude)
quartz()
p <- ggplot(data=sst, aes(x=Longitude, y=Latitude, fill=-SST))
q <- p + geom_tile() + scale_fill_gradientn(colours=rainbow(7)) + coord_map(projection = "mercator")
q + geom_point(data=limpet, aes(x=longitude, y=latitude, fill=NULL),color="black",size=1)
quartz()
p <- ggplot(data=sst, aes(x=Longitude, y=Latitude, fill=-SST))
q <- p + geom_tile() + scale_fill_gradientn(colours=rainbow(7)) + coord_map(projection = "mercator")
q + geom_point(data=limpet, aes(x=longitude, y=latitude, fill=NULL),color="black",size=1)
quartz()
p <- ggplot(data=sst, aes(x=Longitude, y=Latitude, fill=-SST))
q <- p + geom_tile() + scale_fill_gradientn(colours=rainbow(7))
q + coord_map("cylindrical")
p <- ggplot(data=sst, aes(x=Longitude, y=Latitude, fill=-SST))
q <- p + geom_tile() + scale_fill_gradientn(colours=rainbow(7))
q + coord_equal()
p <- ggplot(Cdata,aes(Longitude,Latitude,fill=log(Chlor.mg.m2),colour=log(Chlor.mg.m2)))
p + geom_tile() + coord_equal(xlim=c(-85,-77),ylim=c(6,10)) +  scale_fill_gradientn(colours = topo.colors(10)) +  scale_colour_gradientn(colours = topo.colors(10)) + theme_bw()  + theme(panel.grid.minor = element_blank(), panel.grid.major = element_blank(),plot.background = element_rect(fill="black")) + geom_point(data=energetics.all.prod,aes(x=Longitude,y=Latitude,size=trophic.mean),pch=16,colour="red",alpha=.75) + geom_point(data=energetics.all.prod,aes(x=Longitude,y=Latitude,size=trophic.mean),pch=1,colour="white")
limpet$latitude <- as.numeric(limpet$latitude)
limpet$longitude <- as.numeric(limpet$longitude)
quartz()
p <- ggplot(data=sst, aes(x=Longitude, y=Latitude, fill=-SST))
q <- p + geom_tile() + scale_fill_gradientn(colours=rainbow(7))
q + coord_equal() + theme(panel.grid.minor = element_blank(), panel.grid.major = element_blank(),panel.background = element_blank()) + theme(panel.grid.minor = element_blank(), panel.grid.major = element_blank(),plot.background = element_rect(color="black"))
q + geom_point(data=limpet, aes(x=longitude, y=latitude, fill=NULL),color="black",size=1)
quartz()
p <- ggplot(Cdata,aes(Longitude,Latitude,fill=log(Chlor.mg.m2),colour=log(Chlor.mg.m2)))
p + geom_tile() + coord_equal(xlim=c(-85,-77),ylim=c(6,10)) +  scale_fill_gradientn(colours = topo.colors(10)) +  scale_colour_gradientn(colours = topo.colors(10)) + theme_bw()  + theme(panel.grid.minor = element_blank(), panel.grid.major = element_blank(), plot.background = element_rect(fill="black")) + geom_point(data=energetics.all.prod,aes(x=Longitude,y=Latitude,size=trophic.mean),pch=16,colour="red",alpha=.75) + geom_point(data=energetics.all.prod,aes(x=Longitude,y=Latitude,size=trophic.mean),pch=1,colour="white")
sst <- read.csv("~/Dropbox/NE Pacific Limpets/WOA.NE.Pacific.Mean.Annual.SST.csv", header=TRUE, stringsAsFactors=FALSE)
limpet <- read.csv("~/Dropbox/NE Pacific Limpets/ucmp2_fields_Sara_Limpets.csv", header=TRUE, stringsAsFactors=FALSE)
names(sst) <- c("Latitude", "Longitude", "SST")
limpet$latitude <- as.numeric(limpet$latitude)
limpet$longitude <- as.numeric(limpet$longitude)
quartz()
p <- ggplot(data=sst, aes(x=Longitude, y=Latitude, fill=-SST))
q <- p + geom_tile() + scale_fill_gradientn(colours=rainbow(7))
q + coord_equal() + theme(panel.grid.minor = element_blank(), panel.grid.major = element_blank(), plot.background = element_rect(fill="black"))
q + geom_point(data=limpet, aes(x=longitude, y=latitude, fill=NULL),color="black",size=1)
quartz()
p <- ggplot(data=sst, aes(x=Longitude, y=Latitude, fill=-SST))
q <- p + geom_tile() + scale_fill_gradientn(colours=rainbow(7))
q + coord_equal() + theme(panel.grid.minor = element_blank(), panel.grid.major = element_blank(), plot.background = element_rect(fill="black"))
quartz()
p <- ggplot(data=sst, aes(x=Longitude, y=Latitude, fill=-SST))
q <- p + geom_tile() + scale_fill_gradientn(colours=rainbow(7))
q + coord_equal() + theme(panel.grid.minor = element_blank(), panel.grid.major = element_blank(), panel.background = element_rect(fill="black"))
p <- ggplot(data=sst, aes(x=Longitude, y=Latitude, fill=-SST))
q <- p + geom_tile() + scale_fill_gradientn(colours=rainbow(7))
q + coord_equal(xlim=c(-180,-100,ylim=c(20,70))) + theme(panel.grid.minor = element_blank(), panel.grid.major = element_blank(), panel.background = element_rect(fill="black"))
p <- ggplot(data=sst, aes(x=Longitude, y=Latitude, fill=-SST))
q <- p + geom_tile() + scale_fill_gradientn(colours=rainbow(7))
q + coord_equal(xlim=c(-175,-100,ylim=c(20,70))) + theme(panel.grid.minor = element_blank(), panel.grid.major = element_blank(), panel.background = element_rect(fill="black"))
quartz()
p <- ggplot(data=sst, aes(x=Longitude, y=Latitude, fill=-SST))
q <- p + geom_tile() + scale_fill_gradientn(colours=rainbow(7))
q + coord_equal(xlim=c(-100,-180,ylim=c(20,70))) + theme(panel.grid.minor = element_blank(), panel.grid.major = element_blank(), panel.background = element_rect(fill="black"))
q + geom_point(data=limpet, aes(x=longitude, y=latitude, fill=NULL),color="black",size=1)
quartz()
p <- ggplot(data=sst, aes(x=Longitude, y=Latitude, fill=-SST))
q <- p + geom_tile() + scale_fill_gradientn(colours=rainbow(7))
q + coord_equal(xlim=c(-100,-180,ylim=c(20,70))) + theme(panel.grid.minor = element_blank(), panel.grid.major = element_blank(), panel.background = element_rect(fill="black"))
quartz()
p <- ggplot(data=sst, aes(x=Longitude, y=Latitude, fill=-SST))
q <- p + geom_tile() + scale_fill_gradientn(colours=rainbow(7))
q + coord_equal(xlim=c(-180,-100),ylim=c(20,70))) + theme(panel.grid.minor = element_blank(), panel.grid.major = element_blank(), panel.background = element_rect(fill="black"))
p <- ggplot(data=sst, aes(x=Longitude, y=Latitude, fill=-SST))
q <- p + geom_tile() + scale_fill_gradientn(colours=rainbow(7))
q + coord_equal(xlim=c(-180,-100),ylim=c(20,70)) + theme(panel.grid.minor = element_blank(), panel.grid.major = element_blank(), panel.background = element_rect(fill="black"))
quartz()
p <- ggplot(data=sst, aes(x=Longitude, y=Latitude, fill=-SST))
q <- p + geom_tile() + scale_fill_gradientn(colours=rainbow(7))
q + coord_equal(xlim=c(-180,-100),ylim=c(20,70)) + theme(panel.grid.minor = element_blank(), panel.grid.major = element_blank(), panel.background = element_rect(fill="black")) + geom_point(data=limpet, aes(x=longitude, y=latitude, fill=NULL),color="magenta",size=1)
p <- ggplot(data=sst, aes(x=Longitude, y=Latitude, fill=-SST))
q <- p + geom_tile() + scale_fill_gradientn(colours=rainbow(7))
q + coord_equal(xlim=c(-180,-100),ylim=c(20,70)) + theme(panel.grid.minor = element_blank(), panel.grid.major = element_blank(), panel.background = element_rect(fill="black")) + geom_point(data=limpet, aes(x=longitude, y=latitude, fill=NULL),color="magenta",size=2,alpha=.5)
p <- ggplot(data=sst, aes(x=Longitude, y=Latitude, fill=-SST))
q <- p + geom_tile() + scale_fill_gradientn(colours=rainbow(7))
q + coord_equal(xlim=c(-180,-100),ylim=c(20,70)) + theme(panel.grid.minor = element_blank(), panel.grid.major = element_blank(), panel.background = element_rect(fill="black")) + geom_point(data=limpet, aes(x=longitude, y=latitude, fill=NULL),color="white",size=1,alpha=.5)
p <- ggplot(data=sst, aes(x=Longitude, y=Latitude, fill=-SST))
q <- p + geom_tile() + scale_fill_gradientn(colours=rainbow(7))
q + coord_equal(xlim=c(-180,-100),ylim=c(20,70)) + theme(panel.grid.minor = element_blank(), panel.grid.major = element_blank(), panel.background = element_rect(fill="black")) + geom_point(data=limpet, aes(x=longitude, y=latitude, fill=NULL),color="white",size=1,alpha=.75)
p <- ggplot(data=sst, aes(x=Longitude, y=Latitude, fill=-SST))
q <- p + geom_tile() + scale_fill_gradientn(colours=rainbow(7))
q + coord_cartesian(xlim=c(-180,-100),ylim=c(20,70)) + theme(panel.grid.minor = element_blank(), panel.grid.major = element_blank(), panel.background = element_rect(fill="black")) + geom_point(data=limpet, aes(x=longitude, y=latitude, fill=NULL),color="firebrick1",size=1,alpha=.75)
p <- ggplot(data=sst, aes(x=Longitude, y=Latitude, fill=-SST))
q <- p + geom_tile() + scale_fill_gradientn(colours=rainbow(7))
q + coord_cartesian(xlim=c(-180,-100),ylim=c(20,70)) + theme(panel.grid.minor = element_blank(), panel.grid.major = element_blank(), panel.background = element_rect(fill="black")) + geom_point(data=limpet, aes(x=longitude, y=latitude, fill=NULL),color="firebrick1",size=1,alpha=1)
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/Dropbox/Rasmussen and Harper brach database/Process.Data.R')
source('~/Dropbox/Rasmussen and Harper brach database/Selectivity.Analyses.R')
pdf("Partial.Dependence.pdf", width = 10, height = 8)
p <- ggplot(all.plot.data2,aes(value2,risk,colour=rel.inf))
p + geom_hline(yintercept=.5,colour="black") + geom_line(lineend = "round",size=1.5) + facet_grid(predictor~interval2,scales="free_x")  + theme_bw() + ylab("Marginal effect of predictor on extinction risk") + xlab("Predictor value (proportion of maximum)") + theme(strip.background = element_blank()) + theme(strip.text.x = element_text(size=10),strip.text.y = element_text(size=10,angle=0)) + scale_linetype_manual(values=c(3,1),guide=FALSE) + theme(axis.title.x = element_text(size=12,colour="black")) + theme(axis.title.y =  element_text(size=12, angle = 90,colour="black")) + scale_y_continuous(limits=c(.15,.8),breaks=c(.25,.5,.75))  + guides(colour=guide_legend(title="Relative influence of predictor on extinction risk:",override.aes = list(size=3))) + guides(size=guide_legend(title="% relative influence of predictor on extinction risk:")) + theme(legend.direction = "horizontal", legend.position = "bottom") + theme(legend.text=element_text(size=10)) +  theme(legend.title=element_text(size=12,face="plain")) + scale_colour_gradient2(low="black",high="orange",mid="red",midpoint=15) + theme(axis.text.x=element_text(size=8,angle=-90,hjust=0),axis.text.y=element_text(size=8))
dev.off()
mod.avg
pdf("Classification.Tree.pdf", width = 7, height = 7)
print(prp(K5tree,extra=105,branch.type=5,box.col=cols,branch.col=cols))
dev.off()
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
pdf("~/Dropbox/Rasmussen and Harper brach database/H&R paper drafts/Temp.Profiles.pdf", width = 8, height = 4)
print(p <- ggplot(temps2,aes(latitude,temp.,colour=states,linetype=states)) + geom_line() + scale_colour_manual(values =c("red","red","blue","blue"),name=" ") + scale_linetype_manual(values =c(1,2,1,2),name=" ") + theme_bw() + ylab("mean sea surface temperature") + xlab("degrees absolute latitude") + scale_x_continuous(breaks=c(0,30,60,90)))
dev.off()
pdf("Extinction.Rates.pdf", width = 8, height = 3)
print(p <- ggplot(plot.data,aes(Interval_Top.new,Foote.rate)) + theme_bw() + scale_x_reverse() + theme(panel.grid.major = element_blank()) + theme(panel.grid.minor = element_blank()) + geom_hline(yintercept=2.6,size = .5, colour = "black")  + geom_line(data =  plot.data,aes(midpoint,Foote.rate),colour = "black") + geom_point(data=plot.data,aes(midpoint,Foote.rate),size=3,colour="black") + scale_x_reverse() + theme(panel.background = element_rect(colour="black", size =1, fill = NA)) + theme(panel.grid.major = element_blank()) + theme(panel.grid.minor = element_blank()) + ylab(expression("Extinction rate (LMY)")) + xlab(expression("")) + theme(axis.title.x = element_text(size=16)) + theme(axis.title.y = element_text(size=16, angle = 90)) + theme(axis.text.x = element_text(size=12)) + theme(axis.text.y = element_text(size=12)) + geom_point(data=plot.data,aes(midpoint,Foote.rate),colour="black",size=2.75) + coord_cartesian(xlim = c(455.5,435.8),ylim = c(-.05,3.2)) + theme(legend.position="none") + geom_text(data = stages, aes(midpoint, 2.75, label=stage.short), size = 5, colour = "black")  + geom_hline(yintercept = -.25,colour = "black",size=.25) + geom_segment(data=stages,aes(x = stage.bottom,xend = stage.bottom,y=2.6,yend=2.9), size = .5, colour = "gray")  + geom_hline(yintercept=2.9,size = .5, colour = "black") + geom_text(data = Epochs, aes(midpoint, 3.05, label=epoch), size = 5, colour = "black") + geom_segment(aes(x = 443.4, xend=443.4,y=2.6,yend=3.2),colour="black"))
dev.off()
source('~/.active-rstudio-document')
